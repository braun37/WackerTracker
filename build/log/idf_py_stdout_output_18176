[1/10] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[2/10] Performing build step for 'bootloader'
[1/1] cd /home/nick/WackerTracker/build/bootloader/esp-idf/esptool_py && /home/nick/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/nick/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/nick/WackerTracker/build/bootloader/bootloader.bin
Bootloader binary size 0x6730 bytes. 0x8d0 bytes (8%) free.
[3/10] No install step for 'bootloader'
[4/10] Completed 'bootloader'
[5/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/spi_main.c.obj
[6/10] Linking C static library esp-idf/main/libmain.a
[7/10] Generating ld/sections.ld
[8/10] Linking CXX executable spi.elf
[9/10] Generating binary image from built executable
esptool.py v4.5
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /home/nick/WackerTracker/build/spi.bin
[10/10] cd /home/nick/WackerTracker/build/esp-idf/esptool_py && /home/nick/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/nick/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/nick/WackerTracker/build/partition_table/partition-table.bin /home/nick/WackerTracker/build/spi.bin
spi.bin binary size 0x8f2a0 bytes. Smallest app partition is 0x100000 bytes. 0x70d60 bytes (44%) free.
