[1/5] cd /home/nick/WackerTracker/build/esp-idf/esptool_py && /home/nick/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/nick/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/nick/WackerTracker/build/partition_table/partition-table.bin /home/nick/WackerTracker/build/spi.bin
spi.bin binary size 0x37bc0 bytes. Smallest app partition is 0x100000 bytes. 0xc8440 bytes (78%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /home/nick/WackerTracker/build/bootloader/esp-idf/esptool_py && /home/nick/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/nick/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/nick/WackerTracker/build/bootloader/bootloader.bin
Bootloader binary size 0x6730 bytes. 0x8d0 bytes (8%) free.
[3/5] No install step for 'bootloader'
[4/5] Completed 'bootloader'
[4/5] cd /home/nick/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/nick/esp/esp-idf -D "SERIAL_TOOL=/home/nick/.espressif/python_env/idf5.1_py3.8_env/bin/python;;/home/nick/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/nick/WackerTracker/build -P /home/nick/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 spi.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c4:dd:57:c9:8c:b4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00047fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26416 bytes to 16489...
Writing at 0x00001000... (50 %)
Writing at 0x000076a1... (100 %)
Wrote 26416 bytes (16489 compressed) at 0x00001000 in 0.8 seconds (effective 276.4 kbit/s)...
Hash of data verified.
Compressed 228288 bytes to 119097...
Writing at 0x00010000... (12 %)
Writing at 0x0001d07d... (25 %)
Writing at 0x00024224... (37 %)
Writing at 0x00029e1d... (50 %)
Writing at 0x000329b0... (62 %)
Writing at 0x0003a874... (75 %)
Writing at 0x000403ef... (87 %)
Writing at 0x0004619e... (100 %)
Wrote 228288 bytes (119097 compressed) at 0x00010000 in 3.0 seconds (effective 615.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 416.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
